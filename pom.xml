<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.0.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>org.market</groupId>
	<artifactId>demo-microservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>demo-microservice</name>
	<description>my first microservies project</description>

	<modules>
		<module>company-service-config</module>
		<module>company-service</module>
		<module>company-service-register</module>
		<module>company-service-proxy</module>
	</modules>
	<properties>
		<java.version>11</java.version>
		<spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<!-- Ensure resources are exported correctly - conflict with Spring Boot -->
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<!-- Set Java version -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgs>
						<arg>--add-exports</arg>
						<arg>jdk.scripting.nashorn/jdk.nashorn.internal.ir.annotations=ALL-UNNAMED</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<!-- Set Project Natures -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<sourceIncludes>
						<sourceInclude>**/*.*</sourceInclude>
					</sourceIncludes>
					<!-- All of them are listed manually to solve a limitation of the mvn 
						eclipse plugin (https://issuetracker.springsource.com/browse/STS-2938). This 
						might cause some issues when migrating to the next version of Eclipse/STS) 
						also see spring-intro/pom.xml (projectnatures defined explicitely there as 
						well) -->
					<projectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
						<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
						<projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
						<projectnature>org.eclipse.jem.workbench.JavaEMFNature</projectnature>
					</projectnatures>
					<additionalBuildcommands>
						<name>org.springframework.ide.eclipse.core.springbuilder</name>
					</additionalBuildcommands>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- Ensure resources are handled correctly -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>